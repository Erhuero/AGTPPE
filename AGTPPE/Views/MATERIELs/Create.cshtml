@model AGTPPE.Models.MATERIEL

@{
    ViewBag.Title = "Create";
}

<head runat="server">
    <link rel="stylesheet" type="text/css" href="~/Content/Site.css"/>
</head>

<div class="jumbotron">

    <p class="lead">Application de gestion de tickets / administrateur</p>

</div>

<div class="navbar-collapse collapse">
    <ul class="nav navbar-nav">

        <li>@Html.ActionLink("Incidents en cours", "Administrateur","Home")</li>
        <li>@Html.ActionLink("Incidents clôturés", "Administrateur","Home")</li>
        <li>@Html.ActionLink("Inventaire", "Create", "MATERIELs")</li>
        <li>@Html.ActionLink("Déclarez un incident", "IncidentsAdmin", "Home")</li>
        <li>@Html.ActionLink("Liste de l'inventaire", "Administrateur", "Home")</li>
        <li>@Html.ActionLink("Deconnexion", "Deconnexion", "Home")</li>
    </ul>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Formulaire d'enregistrement de nouveau matériel</h4>
    <hr />

    <div class="contour">
        <div class="form-group">
            @Html.LabelFor(model => model.numInfologMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numInfologMateriel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numInfologMateriel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.celluleMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.celluleMateriel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.celluleMateriel, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.etatMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.etatMateriel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.etatMateriel, "", new { @class = "text-danger" })
            </div>
        </div>


    

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.numeroSerieMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.numeroSerieMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.numeroSerieMateriel, "", new { @class = "text-danger" })
        </div>
    </div>
    


    <div class="form-group">
        @Html.LabelFor(model => model.emplacementMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.emplacementMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.emplacementMateriel, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.typeMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.typeMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.typeMateriel, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.modeleMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.modeleMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.modeleMateriel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ipMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ipMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ipMateriel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.typeConnexionMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.typeConnexionMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.typeConnexionMateriel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.typeIpMateriel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.typeIpMateriel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.typeIpMateriel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Valider" class="btn btn-default" />
        </div>
    </div>
</div>
}

